容器是一个轻量级的沙箱（基于操作系统），主要用来运行封装隔离一组应用程序，容器一般由从镜像创建的应用运行实例，通常可以对容器启动，开始，停止，删除的操作

实例-Instance 本身指一个单独运行的实体

容器的作用：容器可使应用程序在任何环境下以相同方式运行

容器组成部分:应用程序本身（program）指一系列进程的结合。
运行时环境：Runtime Environment（RunEnv） 

进程是存放运行程序状态的一个抽象概念，包含内存和各种数据结构的实例，通过数据结构来存放有关进程的状态信息，进程借助自身的存储空间和权限进行进程隔离 通过权限进行隔离

容器与虚拟机区别
相同点：都是应用提供封装和隔离
不同点：①容器在主机操作系统的用户空间中运行，与操作系统的其他进程隔离
              ②传统的虚拟化技术（如：VMWare，Xen），会创建完整的虚拟机，要运行应用程序，除了部署应用和依赖以外，还要安装整个操作系统

Hypervisor是一种运行在基础物理服务器硬件之上的软件层，可在虚拟化硬件资源。如：CPU，硬盘，内存

NameSpace：命名空间
Cgroups：隔离目录

容器与虚拟机的组成：
虚拟机组成部分： 
虚拟机：一层底层硬件：指CPU，硬盘，内存
二层宿主机操作系统：可以是任何类型，但必须被硬件所支持
三层超级监视器：实现对硬件资源的调动，被宿主机系统所支持区别在于第三层之上
四层客户机Guest os层：复刻完整的os层，Guest os必须超级监视器支持
五层应用程序：实现特定功能

容器组成部分：
容器：一层：物理硬件层CPU，内存，硬盘，网卡
二层：宿主机操作系统，必须被底层硬件所支持 
三层：容器化引擎层（docker引擎），实现容器与操作系统的交互
四层：运行某个程序，提供依赖，借助宿主机系统完成
五层：程序层Program，实现某一个特定的功能
容器的第四层必须与容器的第二层结合使用
——————————————————————————
容器解决的问题--容器使软件具备强大的移植能力
应用服务采用三层结构,
展示层--展示了应用层绘制的数据
应用层--处理业务需求的业务逻辑
数据层--数据存储、读写服务，格式化的数据格式（数据库服务）
绿色软件（便携式软件）:Protable Software

集装箱思想:任何货物都分类放到各自的集装箱中，集装箱在整个运输过程中都是密封的，只有到达最终目的地才被打开。

Docker容器技术将集装箱的思想运用到软件打包上，为代码提供了一个基于容器的标准化运输系统。

容器技术的优势：
对于开发人员：容器有着隔离性和可复用性，开发人员只需为应用创建一次运行环境，之后打包成容器就可以在其他环境下运行。同时容器和所在的主机环境是隔离的，和虚拟机一样，但是更快更方便。

对于系统运维人员：运维人员只需配置好标准运行环境,服务器就可以运行任何容器。

kubernets k8s k3s 本质作用对容器的管理

docker是什么：
1、docker是一个开源的应用容器引擎，使用Go语言实现
2、Docker 重新定义了程序开发测试、交付和部署过程，提出了“构建一次，到处运行”的理念，使开发、测试、部署和分发变得更加高效和容易。
3、Docker 技术使开发者打包应用以及依赖包到一个可移植的容器中，容器可以发布到各种Linux服务器上运行,可以解决开发环境与运维环境Linux版本不一致的问题。
4、Docker是一种轻量级的操作系统虚拟化的解决方案，Docker的基础是Linux容器技术，Docker在Linux容器技术之上进一步进行了封装，让用户不需要关心容器的管理，使得操作更为简便。Docker支持Ubuntu.CentOS、Debian、 Fedora等主流的Linux操作系统。

总之、Docker可以将任何应用及其依赖打包成一个轻量级、可移值、自包含的容器，使应用之间相互隔离，共享系统内核和资源。Docker本身不是容器，Docker只是管理容器的引擎。
——————————————————————————
Docker Engine的服务组成：三个
①服务器端Docker进程（Server Docker Daemon）
②API接口（REST API）
③Docker客户端命令（Client DockerCLI）

Docker Engine业务架构：
①docker客户端：docker构建，docker拉取，docker启动
②Docker主机
③镜像仓库
Docker的3个基本概念
镜像：镜像是一个模板，用于创建容器实例，是静态的存在
容器:容器是某个镜像的运行实例，是动态的存在
仓库服务：仓库是存储Docker镜像的位置，可以是本地仓库、也可以是远程仓库。 Docker Hub是一个由Docker公司提供的公共镜像仓库。

命令：
docker run 选项（可有可无） 仓库：镜像标签 启动容器后的命令（创建docker容器，并且启动docker容器）
docker start 容器id或容器名称  开始容器
docker restart 选项 容器id或容器名称（重启容器）
docker stop 选项 容器id或容器名称（停止容器）








